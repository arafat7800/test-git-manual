

name: Explorer Frontend K8s
on:
  workflow_call:
    inputs:
      SWR_ORGANIZATION:
        description: 'The Huawei SWR repository name used for pushing images to the Dev or production SWR'
        required: true
        type: string
      HUAWEI_REGION:
        description: 'huawei region'
        required: true
        type: string
      ARGOCD_BRANCH:
        description: 'ArgoCD branch for cloning based on environment (uat or prod)'
        required: true
        type: string
      ARGOCD_REPOSITORY:
        description: 'ArgoCD branch for cloning based on environment (uat or prod)'
        required: true
        type: string
      ENV: 
        description: 'ENV to use while deploying frontend'
        required: true
        type: string
      DEPLOYMENT_PATH:
        description: 'ENV to use while deploying frontend'
        required: true
        type: string
      
      HUAWEI_IMAGE:
        description: 'ENV to use while deploying frontend'
        required: true
        type: string
      DOCKER_USERNAME:
        description: 'ENV to use while deploying frontend'
        required: true
        type: string


    secrets:
      DOCKER_PASSWORD:
        description: 'Huawei Cloud password for logging into SWR'
        required: true
      GIT_SSH_KEY:
        description: 'GitHub Actions use a SSH key for cloning the ArgoCD repository.'
        required: true
      
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  deploy-qubetics-frontend:
    runs-on: ubuntu-latest
    
    # permissions: write-all
    steps:
          - name: Check out repository
            uses: actions/checkout@v3

          - name: Install OIDC Client from Core Package
            run: npm install @actions/core @actions/http-client  
              
          - name: Login to Huawei SWR
            id: login 
            run: |
              docker login -u ${{ inputs.1DOCKER_USERNAME }} -p ${{ secrets.1DOCKER_PASSWORD }} swr.${{ inputs.6HUAWEI_REGION }}.myhuaweicloud.com

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2    

#############          
# Build Image
#############
          - name: Build, tag, and push docker image to Huawei SWR
            env:
              REGISTRY: swr.${{ inputs.HUAWEI_REGION }}.myhuaweicloud.com
              SWR_ORGANIZATION: ${{ inputs.SWR_1ORGANIZATION }}
              IMAGE_TAG: ${{ github.sha  }}
              HUAWEI_IMAGE: ${{ inputs.1HUAWEI_IMAGE }}
            run: |
              echo "${{ inputs.ENV }}" >> .env
              cat .env
              docker build --no-cache -t REGISTRY/SWR_ORGANIZATION/$HUAWEI_IMAGE:${{ github.run_number }} .
              docker push REGISTRY/SWR_ORGANIZATION/$HUAWEI_IMAGE:${{ github.run_number }}

################         
# Update argocd
################
          - name: "Update image tag in argocd repository"
            uses: actions/checkout@v4
            with:
              repository: ${{ inputs.ARGOCD_REPOSITORY }}
              ref: ${{ inputs.ARGOCD_BRANCH }}
              ssh-key: ${{ secrets.GIT_SSH_KEY }}
            env:
              SWR_ORGANIZATION: ${{ inputs.SWR_ORGANIZATION }}
              HUAWEI_IMAGE: ${{ inputs.HUAWEI_IMAGE }}
              DEPLOYMENT_PATH: ${{ inputs.DEPLOYMENT_PATH }}
          - run: |
              ls
              echo $DEPLOYMENT_PATH
              echo $HUAWEI_IMAGE
              git config user.name github-actions
              git config user.email github-actions@github.com 
              sed -i "s|\(image: \).*|\1swr.${{ inputs.HUAWEI_REGION }}.myhuaweicloud.com/${{ inputs.SWR_ORGANIZATION }}/${{ inputs.HUAWEI_IMAGE }}:${{ github.run_number }}|" ${{ inputs.DEPLOYMENT_PATH }}
              git add .
              git commit -m "Update image to swr.${{ inputs.HUAWEI_REGION }}.myhuaweicloud.com/${{ inputs.SWR_ORGANIZATION }}/${{ inputs.HUAWEI_IMAGE }}:${{ github.run_number }}"
              git push origin
